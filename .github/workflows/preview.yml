name: Deploy Preview

on:
  pull_request:
    types: [
      closed,
      labeled,
      opened,
      ready_for_review,
      reopened,
      synchronize,
      unlabeled,
    ]
    branches:
      - master

env:
  NODE_VERSION: '14.x'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_ACTOR_EMAIL: ${{ github.event.head_commit.committer.email }}

jobs:
  Deploy-Preivew:
    if: |
      github.event.pull_request.draft == false ||
      (
        github.event.action == 'labeled' &&
        contains(github.event.pull_request.labels.*.name, 'deploy-preview')
      )
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - run: yarn install
    - name: Deploy
      env:
        GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_PR_TITLE: ${{ github.event.pull_request.title }}
      run: yarn deploy

  Debug-Preivew:
    runs-on: ubuntu-latest

    steps:
    - name: Debug
      id: debug
      run: echo "${{ github.head_ref }}"
    - run: echo "${{ github.event.pull_request.number }}"
    - run: echo "${{ github.event.pull_request.title }}"
    - run: echo "${{ toJSON(github.event.pull_request) }}"

  Clean-Preivew:
    if: |
      github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Clean up
      id: clean-up
      run: echo "Clean up!!!!!!!!!!!!!"
